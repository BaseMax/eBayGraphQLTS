# type
type Order {
  id: ID
  product: Product
  userId: User
  totalAmount: Int
  shippingAddress: String
}

type Shipping {
  street: String
  city: String
  state: String
  zipCode: String
}

type Billing {
  street: String
  city: String
  state: String
  zipCode: String
}

type Product {
    title: String
    id: ID
    description: String
    price: Int
    seller: Seller
}

type Seller {
    id: ID
    name: String
}

#input 
input CreateShippingAddres {
  userId: ID
  street: String
  city: String
  state: String
  zipCode: String
}
# mutation
type Mutation {
  makeOrder(productId: ID!, totalAmount: Int!): Order!
  getOrderByProduct(productId: ID!): Order!
  getOrderByUser(userId: ID!): Order!

  getShippingAddress(userId: ID!): Shipping!
  updateShippingAddress(csa: CreateShippingAddres!): Shipping!
  createShippingAddress(csa: CreateShippingAddres!): Shipping!

  getBillingAddress(userId: ID!): Billing!
  updateBillingAddress(csa: CreateBillingAddres!): Billing!
  createBillingAddress(csa: CreateBillingAddres!): Billing!
}